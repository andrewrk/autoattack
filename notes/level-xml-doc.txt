Structure:
    <jclevel
        gameover =
            true: this isn't really a level. you beat the game.
            false: this is a level
        sx = which square to start in x
        sy = which square to start in y
        sl = x index of the leftmost square
        st = y index of the topmost square
        sr = x index of the rightmost square
        sb = y index of the bottommost square
        spx = starting x point within the starting square
        spy = starting y point within the starting square
        scale = scale the map bigger or smaller
    >
        # for each object:
        <obj
            # mandatory
            cls = what class of object is this
            id = which item in the class is this
            x = x location of the object from beginning of containing square
            y = y location of the object from beginning of containing square
            sx = x index of square that contains the object
            sy = y index of square that contains the object
            
            # optional
            w = width of object
            h = height of object
            dir = direction that the object is facing
            
            # present depending on class
        />
    </jclevel>

Classification
    CLASS 0 - DECORATION - LevelObject.CLASS_DECORATION
        * attributes:
            layer = 
                1: background, dynamic - objects behind level and scroll slowly
                1: background, static - stationary objects behind player
                4: foreground, static - stationary objects in front of player
                5: foreground, dynamic - in front of player and scroll quickly
            scroll = 
                -1: slow (background)
                0: normal
                1: fast (foreground)
                
        ID 0 = Base camp fence
        ID 1 = Base camp entrance fg
        ID 2 = Cactus
        ID 3 = Skeleton Bush
        ID 4 = Good-looking bush
        ID 5 = Christmas Tree
        ID 6 = Big Saguaro Cactus
        ID 7 = Big Dead Bush
        ID 8 = Black bar
        ID 9 = Cloud
        ID 10 = Base camp entrance bg

    CLASS 1 - SPECIAL - LevelObject.CLASS_SPECIAL
        ID 0 = Activation Gate
        ID 1 = Platforms Moving Up
            range = how far (pixels) a platform moves before it disappears
            velX = velocity x of the platform
            velY = velocity y of the platform
            delay = how many frames to wait before creating another platform

    CLASS 2 - STATIONARY PHYSICAL OBJECT - LevelObject.CLASS_OBSTACLE
        * these objects are locked in place and are obstructions
        * properties:
            destructable = true/false
            hp = how much damage does it take to destroy it
        ID 0 = Boulder
        ID 1 = Defense shelf (for enemies to hide behind)
        ID 2 = Glass Pane
        ID 3 = Mountain Exit
        ID 4 = Up Ramp 
        ID 5 = Down Ramp
        ID 6 = Trap door
            code = number that matches it with a switch
        ID 7 = Platforms Moving Up
            yrange = how far up (pixels) a platform moves before it disappears
            pspace = the space in between moving platforms
        ID 8 = Up Ramp #2
        ID 9 = One-way spike
            rate = how many frames to count before popping back up

    CLASS 3 - POWER UPS - LevelObject.CLASS_POWERUP
        * collectables that you get once and they disappear
        ID 0 = Gas can
        ID 1 = Speed Booster
        ID 2 = Health Pack
        ID 3 = Time Bonus
        ID 4 = Extra life

    CLASS 4 - TRIGGERS - LevelObject.CLASS_TRIGGER
        ID 0 = Instant Death (jeep explodes)
        ID 1 = Helicopter attack from above
            code =  if provided, the helicopter attack is triggered by
                    a switch rather than a hit area
        ID 2 = Level complete
        ID 3 = jeep explodes and but the driver hops out unharmed

    CLASS 5 - BAD GUYS - LevelObject.CLASS_ENEMY
        * these are in the physics engine and require AI
        * properties:
        ID 0 = foot soldier
            arrival =
                0: they appear as if they have been standing there
                1: hanging from a rope
                2: parachuting from the sky
            weapon =
                0: Pistol
                1: Grenade
                2: Bazooka
                3: Guided missile launcher
                4: Bombs
                5: Mines
        ID 1 = Helicopter
            weapon
            weapon2 = same as weapon - helicopters can dual wield
        ID 2 = Auto-turret
            srange = starting angle (degrees) at which the object can point
            erange = ending angle (degrees) at which the object can point
            rate = how many frames to wait in between firing
        ID 3 = Cannon
        ID 4 = Bad guy chucking bombs at the player
            
    CLASS 6 - STATIONARY NON PHYSICAL OBJECTS - LevelObject.CLASS_STATIC
        * these objects do not move and have no physical presence
        ID 0 = Upside-down Switch
            code = number that matches it with something to switch
        ID 1 = Vent that drops goodies
            weapon
            rate = how many frames to count before dropping

    CLASS 7 - DYNAMIC PHYSICAL OBJECTS - LevelObject.CLASS_ENTITY
        * these suckers get put in the physics engine
        ID 0 = Explosive Barrel - big firey explosion if damaged
        ID 1 = Mine - explodes if you get too close
        ID 2 = Rubble - a little useless piece of rubble

    CLASS 8 - PROJECTILES - LevelObject.CLASS_PROJECTILE
        ID 0 = Bullet

